---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:3.1.0
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:3.1.0
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker:9092

  fakes3:
    image: lphoward/fake-s3
    hostname: fakes3
    ports:
      - '4569:4569'

  connect:
    image: confluentinc/cp-kafka-connect:3.1.0
    hostname: connect
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_CONSUMER_MAX_POLL_RECORDS: 10
      CONNECT_CONSUMER_AUTO_OFFSET_RESET: latest
      CONNECT_TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS: 300000
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 30000
#      CONNECT_CONSUMER_MAX_POLL_INTERVAL_MS: 1000
    volumes:
      - './target:/etc/kafka-connect/jars'

  prod-docker-dns-prod-server:
    container_name: dns-proxy-server
    image: defreitas/dns-proxy-server:2.2.2
    hostname: dns.mageddo
    volumes:
      - /opt/dns-proxy-server/conf:/app/conf
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/resolv.conf:/etc/resolv.conf
    ports:
      - 5380:5380
    network_mode: bridge